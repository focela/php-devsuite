# Define FastCGI backend for PHP processing
upstream fastcgi_backend {
    server unix:/sock/docker.sock;
}

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    return 301 https://$server_name$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost;
    root /var/www;
    index index.html index.htm index.php;

    # SSL certificate configuration
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    # Disable logging for specific files
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # Handle static files and fallback to index.php
    location / {
        if (-f $request_filename) {
            break;
        }
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # PHP file handling
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass fastcgi_backend;
        fastcgi_index index.php;
        include fastcgi_params;

        # FastCGI optimizations
        fastcgi_buffers 4 256k;
        fastcgi_buffer_size 128k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_connect_timeout 50;
        fastcgi_read_timeout 180;
        fastcgi_send_timeout 180;

        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors on;
        try_files $uri =404;
    }

    # Deny access to .ht* files
    location ~ /\.ht {
        deny all;
    }

    # Media: images, icons, video, audio, HTC files
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1d;
        access_log off;
        add_header Cache-Control "public";
    }

    # CSS and JavaScript files
    location ~* \.(?:css|js)$ {
        expires 1d;
        access_log off;
        add_header Cache-Control "public";
    }
}
